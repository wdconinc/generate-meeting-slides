name: 'Generate meeting slides'
description: 'Create a pdf presentation with PR and issue overview'
branding:
  icon: 'monitor'
  color: 'blue'
inputs:
  config:
    description: 'Configuration yaml snippet (see https://pypi.org/project/mtng/)'
    required: true
  since:
    description: 'Meta-date since when slides should be made'
    required: false
    default: '1 week ago'
  presentation:
    description: 'Presentation master file that includes `slides.tex`'
    required: false
    default: ''
runs:
  using: "composite"
  steps:
    - uses: actions/cache@v3
      id: cache-venv
      with:
        path: ./.venv/
        key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-venv-
    - run: |
        echo "::group::pip install -r requirements.txt"
        python -m venv ./.venv
        . ./.venv/bin/activate
        pip install -r ${{ github.action_path }}/requirements.txt
        echo "::endgroup::"
      if: steps.cache-venv.outputs.cache-hit != 'true'
      shell: bash
    - id: mtng
      run: |
        . ./.venv/bin/activate
        since=$(date --date="${{ inputs.since }}" +'%Y-%m-%d %H:%M:%S')
        echo "::group::config.yml"
        echo "${{ inputs.config }}" | tee config.yml
        echo "::endgroup::"
        echo "::group::slides.tex"
        mtng generate --token="${{ github.token }}" --since="${since}" config.yml | tee slides.tex
        echo "::endgroup::"
        echo "::group::Resolve main tex file"
        if [ -z "${{ inputs.presentation }}" ] ; then
          if [ -f "presentation.tex" ] ; then
            echo "Using presentation.tex already in workspace"
          else
            echo "Copying action_path/presentation.tex to workspace"
            cp ${{ github.action_path }}/presentation.tex .
          fi
          dir="."
          file="presentation"
        else
          if [ -f "${{ inputs.presentation }}" ] ; then
            echo "Using specified presentation file, ${{ inputs.presentation }}"
          else
            echo "::error::Unable to find ${{ inputs.presentation }}"
          fi
          dir="$(dirname ${{ inputs.presentation }})"
          file="$(basename ${{ inputs.presentation }})"
        fi
        echo "::set-output name=dir::${dir}"
        echo "::set-output name=file::${file}"
        echo "::endgroup::"
      shell: bash
    - uses: xu-cheng/latex-action@v2
      with:
        root_file: |
          ${{ steps.mtng.outputs.dir }}/${{ steps.mtng.outputs.file }}.tex
    - uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.mtng.outputs.file }}
        path: ${{ steps.mtng.outputs.file }}.pdf
